
# @router.callback_query(LanguageCallbackData.filter())
# async def start_register(callback_query: types.CallbackQuery,
#                          state: FSMContext,
#                          callback_data: LanguageCallbackData
#                          ):
#     await state.update_data({'language': callback_data.language})
#     text = _("Telefon raqamingizni yuboring")  # noqa
#
#     await callback_query.message.answer(text, reply_markup=reply_phone_number())
#     await state.set_state(RegistrationStateGroup.phone)





# @router.message(F.contact, RegistrationStateGroup.phone)
# async def phone_register(message: types.Message, state: FSMContext):
#     await state.update_data({'phone_number': message.contact.phone_number})
#     await message.answer(_("Ro'yxatdan o'tish yakunlandi."),  # noqa
#                          reply_markup=types.ReplyKeyboardRemove())




    # first_color = await sync_to_async(product.colors.first)()









##########################################################

#
#
# @router.callback_query(ProductCallbackData.filter())
# async def product_detail_callback_handler(callback: types.CallbackQuery,
#                                           callback_data: ProductCallbackData,
#                                           **data):
#     user = data.get('user')
#     language = user.language if user else 'uz'
#     product_id = callback_data.product_id
#
#     product = await get_product_with_colors(product_id)
#
#     if not product:
#         await callback.message.answer(_("Mahsulot topilmadi.")) # noqa
#         return
#
#     name = product.name_ru if language == 'ru' else product.name_uz
#
#     colors_count = product.colors.count()
#     colors_text = f"\n\nüì¶ {colors_count} ta rang mavjud:" if language == 'uz' else f"\n\nüì¶ –î–æ—Å—Ç—É–ø–Ω–æ {colors_count} —Ü–≤–µ—Ç–æ–≤:" # noqa
#
#     caption = f"<b>{name}</b>{colors_text}"
#
#     image_path = product.main_image.path
#     photo = FSInputFile(image_path)
#
#     await callback.message.answer_photo(
#         photo=photo,
#         caption=caption,
#         parse_mode="HTML",
#         reply_markup=await product_detail_keyboard(
#             product,
#             product.categories_id,
#             language
#         )
#     )
#
#
# @router.callback_query(ColorVariantCallbackData.filter())
# async def color_variant_handler(callback: types.CallbackQuery,
#                                 callback_data: ColorVariantCallbackData,
#                                 **data):
#     user = data.get('user')
#     language = user.language if user else 'uz'
#
#     color_variant = await ColorVariant.objects.select_related('product').aget(
#         id=callback_data.color_variant_id
#     )
#
#     # Rang rasmlarini olish
#     color_images = color_variant.images.all()
#
#     product_name = color_variant.product.name_ru if language == 'ru' else color_variant.product.name_uz
#
#     caption = f"<b>{product_name}</b>\n"
#     caption += f"üé® Rang: {color_variant.color_name}\n"
#     caption += f"üí∞ Narx: {color_variant.price} so'm\n\n"
#     caption += "Miqdorni tanlang:" if language == 'uz' else "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:"
#
#     # Rang rasmini ko'rsatish
#     if color_images:
#         first_image = color_images[0]
#         photo = FSInputFile(first_image.image.path)
#
#         await callback.message.answer_photo(
#             photo=photo,
#             caption=caption,
#             parse_mode="HTML",
#             reply_markup=quantity_keyboard(color_variant.id, language)
#         )
#     else:
#         await callback.message.answer(
#             caption,
#             parse_mode="HTML",
#             reply_markup=quantity_keyboard(color_variant.id, language)
#         )
#
#
#
#




# @router.callback_query(ProductCallbackData.filter())
# async def product_detail_callback_handler(callback: types.CallbackQuery,
#                                           callback_data: ProductCallbackData,
#                                           **data):
#     user = data.get('user')
#     language = user.language if user else 'uz'
#     product_id = callback_data.product_id
#
#     product = await get_product_with_colors(product_id)
#
#     if not product:
#         await callback.message.answer(_("Mahsulot topilmadi."))  # noqa
#         return
#
#     name = product.name_ru if language == 'ru' else product.name_uz
#
#     first_color = next(iter(product.colors.all()), None)
#
#     price = f"{first_color.price} so'm" if first_color else _("Narx mavjud emas")  # noqa
#
#     caption = f"<b>{name}</b>\nNarxi: {price}"  # noqa
#
#     image_path = product.main_image.path
#     photo = FSInputFile(image_path)
#
#     await callback.message.answer_photo(
#         photo=photo,
#         caption=caption,
#         parse_mode="HTML",
#         reply_markup=await product_detail_keyboard(product.categories_id, language)
#     )
#





############################################ back
